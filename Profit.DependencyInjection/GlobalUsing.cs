global using FluentValidation;
global using MediatR;
global using Microsoft.AspNetCore.Authentication.JwtBearer;
global using Microsoft.Extensions.Configuration;
global using Microsoft.Extensions.DependencyInjection;
global using Microsoft.IdentityModel.Tokens;
global using Microsoft.OpenApi.Models;
global using Profit.Core.Shared;
global using Profit.Application.Commands.Ingredient.Create;
global using Profit.Application.Commands.Ingredient.CreateMany;
global using Profit.Application.Commands.Ingredient.Delete;
global using Profit.Application.Commands.Ingredient.Put;
global using Profit.Application.Commands.Product.Create;
global using Profit.Application.Commands.Product.CreateMany;
global using Profit.Application.Commands.Product.Delete;
global using Profit.Application.Commands.Product.Put;
global using Profit.Application.Commands.Recipe.Create;
global using Profit.Application.Commands.Recipe.CreateMany;
global using Profit.Application.Commands.Recipe.Delete;
global using Profit.Application.Commands.Recipe.Put;
global using Profit.Application.Commands.User.Create;
global using Profit.Application.Commands.User.Put;
global using Profit.Domain.DTOs;
global using Profit.Domain.Entities;
global using Profit.Domain.Interfaces.Models;
global using Profit.Domain.Interfaces.Repositories;
global using Profit.Domain.Interfaces.Repositories.ReadOnly;
global using Profit.Domain.Interfaces.Services;
global using Profit.Domain.Models;
global using Profit.Domain.Models.Options;
global using Profit.Domain.Pipelines;
global using Profit.Domain.Profiles;
global using Profit.Application.Queries.Ingredient.GetPaginated;
global using Profit.Application.Queries.Ingredient.GetUnique;
global using Profit.Application.Queries.Product.GetPaginated;
global using Profit.Application.Queries.Product.GetUnique;
global using Profit.Application.Queries.Recipe.GetPaginated;
global using Profit.Application.Queries.Recipe.GetUnique;
global using Profit.Application.Queries.User.GetPaginated;
global using Profit.Application.Queries.User.GetUnique;
global using Profit.Domain.Validations.DTOs;
global using Profit.Domain.Validations.Entities;
global using Profit.Infrastructure.Repository.Cache;
global using Profit.Infrastructure.Repository.EFInterceptors;
global using Profit.Infrastructure.Repository.Repositories;
global using Profit.Infrastructure.Repository.Repositories.ReadOnly;
global using Profit.Infrastructure.Service.Services;
global using Serilog;
global using System.Security.Claims;
global using System.Text;
