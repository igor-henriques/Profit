global using FluentValidation;
global using MediatR;
global using Microsoft.AspNetCore.Mvc;
global using Microsoft.EntityFrameworkCore;
global using Microsoft.Extensions.Options;
global using Profit.API.Endpoints.V1;
global using Profit.API.Middlewares;
global using Profit.Core.Exceptions;
global using Profit.Core.Shared;
global using Profit.DependencyInjection.Injectors;
global using Profit.Application.Commands.Ingredient.Create;
global using Profit.Application.Commands.Ingredient.CreateMany;
global using Profit.Application.Commands.Ingredient.Delete;
global using Profit.Application.Commands.Ingredient.Put;
global using Profit.Application.Commands.Order.Create;
global using Profit.Application.Commands.Order.Delete;
global using Profit.Application.Commands.Order.Put;
global using Profit.Application.Commands.Product.Create;
global using Profit.Application.Commands.Product.CreateMany;
global using Profit.Application.Commands.Product.Delete;
global using Profit.Application.Commands.Product.Put;
global using Profit.Application.Commands.Recipe.Create;
global using Profit.Application.Commands.Recipe.CreateMany;
global using Profit.Application.Commands.Recipe.Delete;
global using Profit.Application.Commands.Recipe.Put;
global using Profit.Application.Commands.User.Create;
global using Profit.Application.Commands.User.Delete;
global using Profit.Application.Commands.User.Put;
global using Profit.Domain.Exceptions;
global using Profit.Domain.Interfaces.Models;
global using Profit.Domain.Interfaces.Repositories.ReadOnly;
global using Profit.Domain.Models.Options;
global using Profit.Application.Queries.Ingredient.GetPaginated;
global using Profit.Application.Queries.Ingredient.GetUnique;
global using Profit.Application.Queries.Order.GetPaginated;
global using Profit.Application.Queries.Order.GetUnique;
global using Profit.Application.Queries.Product.GetPaginated;
global using Profit.Application.Queries.Product.GetUnique;
global using Profit.Application.Queries.Recipe.GetPaginated;
global using Profit.Application.Queries.Recipe.GetUnique;
global using Profit.Application.Queries.User.Authenticate;
global using Profit.Application.Queries.User.GetPaginated;
global using Profit.Application.Queries.User.GetUnique;
global using Profit.Infrastructure.Repository.DataContext;
global using Profit.Infrastructure.Repository.EFInterceptors;
global using Serilog;
global using System.Net;
global using System.Text.Json;
global using System.Text.Json.Serialization;
global using static Profit.Core.Shared.Constants;
global using ExceptionHandlerMiddleware = Profit.API.Middlewares.ExceptionHandlerMiddleware;